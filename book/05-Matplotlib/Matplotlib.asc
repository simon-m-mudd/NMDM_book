== Plotting data with python and matplotlib

One requirement ubiquitous to all research is the production of figures that can effectively relay your results to the research community, policy makers and/or general public (this fact is unfortunately lost on some people!).  In almost all cases, figures may need to be revised, and you may need to produce plots of multiple datasets that have consistent formatting.  Python is your friend in this regard, providing a powerful library of tools http://matplotlib.org/[Matplotlib].

Whilst a little awkward to start with, if you tenderly nourish your nascent relationship with Matplotlib, you will find that it will provide a comprehensive range of options for plotting and annotating, with the advantage that if you need to reproduce figures, you can do so at the touch of a button (or a single command for all you Linux types).  For some annotations, such as more complex annotations, it may still be necessary/easier for you to modify the figures in a graphics package.  Fortunately, https://inkscape.org/en/[Inkscape] provides a nice package that deals with Scalar Vector Graphics (SVG) files, which enables it to sync nicely with your Matplotlib output.  We’ll deal with this later.

In this class, we will be using a python GUI called https://code.google.com/p/spyderlib/[Spyder]. If you have followed the installation instructions in the appendices you should already have it installed. If you haven't follow the links for installation instructions on <<Setting up on Windows,Windows>>, <<Setting up on Linux,Linux>>, and <<Setting up on Mac,MacOS>>. All of this is also available on the University of Edinburgh servers.

Before we begin, it is worth pointing out that there are many ways of producing the same figure, and there are an infinite number of possible permutations with regards to what kind of figure you might want to produce.  With this in mind, we will try to introduce you to as many different options as is feasible within the confines of this course.  The aim is to give you sufficient knowledge of the commonly used commands for plotting in Matplotlib, so that you can quickly move on to producing your own scripts.  The best way of becoming the proficient Matplotlib wizard that you aspire to be is to practice making your own.  You will never look at an Excel plot in the same way again!

On a final note, one of the wonderful things about Matplotlib is the wealth of information out there to give you a head start.  Check out the http://matplotlib.org/gallery.html[Matplotlib gallery] for inspiration; source code is provided with each figure  just click on the one you want to replicate; there is also extensive online documentation, a whole load of other websites and blogs from which you can get more information, or if you are really stuck, an active community of Matplotlib users on http://stackexchange.com/[Stack Exchange].

OK, let’s begin…

include::sections/Intro-to-matplotlib.asc[]

include::sections/Matplotlib-with-data.asc[]


== Summary

This chapter has gone through the basics of plotting data using matplotlib.
From here, you can start modifying your scripts, 
or trying to create new plots by following the http://matplotlib.org/gallery.html[examples on the matplotlib website].