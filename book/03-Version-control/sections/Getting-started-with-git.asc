=== Getting started with Git

We assume you have installed git. 
If you are working on the University of Edinburgh's GeoScience servers, it is already installed. 
You can call it with:

[source,console]
----
$ git
----
    
Much of what I will descrbe below is also described in the
http://git-scm.com/book/en/>[Git book ].
  
The first thing you want to do is set the username and email for the session:

[source,console]
----
$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com 
----

I'm not acutally sure if this will affect other users, as it is sitting on the 
GeoScience server. So you might choose to not use the --global flag, and 
so the name and email will only apply to the specific project you are working 
on that session:


[source,console]
----
$ git config --local user.name "John Doe"
$ git config --local user.email johndoe@example.com     
----

You can check all your options with:
 
[source,console]
---- 
$ git config --list
----
    
==== Setting up a git repository

First, I'll navigate to the directory that holds my
prospective git repository:

[source,console]
---- 
$ pwd
/home/smudd/SMMDataStore/Courses/Numeracy_modelling_DM/markdown_test
----
    
Now I'll initiate git here:

[source,console]
---- 
$ git init
Initialized empty Git repository in /home/smudd/SMMDataStore/Courses/Numeracy_modelling_DM/markdown_test.git/
----


==== Adding files and directories to the repository

So now you have run `git init` in some folder to initiate a repository. 
You will now want to add files with the add command::

[source,console]
---- 
$ git add README.md
----
    
You can also add folders and all their containing files this way. 
 
==== Committing to the repository

Adding files **DOES NOT** mean that you are now keeping track of changes. You do this by "commiting" them. 
A `commit` command tells git that you want to store changes. 
  
You need to add a message with the `-m` flag. Like this:

[source,console]
----
$ commit -m "Initial project version" .
----
    
Where the . indicates you want everything in the current directory including subfolders.
You could also commit an individual file with:

[source,console]
----
commit -m "Initial project version" README.md
----
  
=== Pushing your repository to Github

https://github.com/[Github] is a website that hosts git repositories. 
It is a popular place to put open source code. 
  
To host a repository on https://github.com/[Github], you will need to set up the repository before
synching your local repository with the github repository. 

After you sign up to Github, go to your profile page, and click on the `repositories` tab near the top of the page, and then click on the *New* button to the right:

.Setting up a new github repository
image::images/Git_new_repo.jpg[Github new repository]

Once you do this, add a sensible name and a description. 
*I would strongly recommend NOT initializing with a readme, but rather making your own readme.* 

.Naming a new repository
image::images/New_repo.jpg[Naming new repository]

Once you have done this Github will helpfully tell you exactly what to do:

.Github telling you what to do with your repository
image::images/Helpful_github.jpg[Helpful github]

If you have been following along, you will aready have a git repository, so all you need to do is `add` a `remote`
and then `push` to this `remote`:

[source,console]
----
$ git remote add origin https://github.com/your-user-name/your-repo-name.git
$ git push -u origin master
Counting objects: 36, done.
Delta compression using up to 64 threads.
Compressing objects: 100% (33/33), done.
Writing objects: 100% (36/36), 46.31 KiB, done.
Total 36 (delta 8), reused 0 (delta 0)
To https://github.com/simon-m-mudd/markdown_test.git
* [new branch]      master -> master
Branch master set up to track remote branch master from origin.
----    
         
=== Problems with Setting up repos on github

Occasionally git will misbehave. Here are some examples and their solutions. 
     
==== Problems arising when you edit files on Github rather than in your local repository

This problem occures when you edit files on the GitHub website. I would advise against this, 
and is why we advide not to create a readme.md via Github. 
I made a local github repository using:
 
[source,console]
---- 
$ git init
----    
And then tried to push to a github repo, but the first error message is you need to make a repository on github first. 
I added a readme file on Github, but this seemed to lead to errors:


[source,console]
----
Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Merge the remote changes (e.g. 'git pull')
----

To fix this you can `touch` your repository:
  
. On the local repo, I used:
+
[source,console]
----    
$ touch README.md
$ git add README.md
$git commit -m "Trying to add readme" .
----
+
. Then I pulled from the master:
+
[source,console]
----      
$ git pull origin master
----        
+        
. Then I pushed to the master. That seemed to fix things:
+
[source,console]
---- 
$ git push -u origin master
----

        

 
 
